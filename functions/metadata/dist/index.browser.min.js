var jsPsychMetadata=function(){"use strict";var V=Object.defineProperty,d=Object.getOwnPropertySymbols,f=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,y=(n,e,t)=>e in n?V(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,j=(n,e)=>{for(var t in e||(e={}))f.call(e,t)&&y(n,t,e[t]);if(d)for(var t of d(e))m.call(e,t)&&y(n,t,e[t]);return n},O=(n,e)=>{var t={};for(var a in n)f.call(n,a)&&e.indexOf(a)<0&&(t[a]=n[a]);if(n!=null&&d)for(var a of d(n))e.indexOf(a)<0&&m.call(n,a)&&(t[a]=n[a]);return t};class w{constructor(){this.authors={}}getList(){const e=[];for(const t of Object.keys(this.authors))e.push(this.authors[t]);return e}setAuthor(e){if(typeof e=="string"){this.authors[e]=e;return}if(!e.name){console.warn("Name field is missing. Author not added.");return}const t=e,{name:a}=t,i=O(t,["name"]);if(Object.keys(i).length==0)this.authors[a]=a;else{const r=j({name:a},i);this.authors[a]=r;const s=Object.keys(e).filter(o=>!["type","name","givenName","familyName","identifier"].includes(o));s.length>0&&console.warn(`Unexpected fields (${s.join(", ")}) detected and included in the author object.`)}}getAuthor(e){return e in this.authors?this.authors[e]:(console.warn("Author (",e,") not found."),{})}}var x=Object.defineProperty,g=Object.getOwnPropertySymbols,P=Object.prototype.hasOwnProperty,M=Object.prototype.propertyIsEnumerable,v=(n,e,t)=>e in n?x(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,k=(n,e)=>{for(var t in e||(e={}))P.call(e,t)&&v(n,t,e[t]);if(g)for(var t of g(e))M.call(e,t)&&v(n,t,e[t]);return n},p=(n,e,t)=>new Promise((a,i)=>{var r=l=>{try{o(t.next(l))}catch(c){i(c)}},s=l=>{try{o(t.throw(l))}catch(c){i(c)}},o=l=>l.done?a(l.value):Promise.resolve(l.value).then(r,s);o((t=t.apply(n,e)).next())});class F{constructor(){this.pluginFields={}}getPluginInfo(e,t){return p(this,null,function*(){if(e in this.pluginFields)return this.pluginFields[e][t];{console.log("doesn't exist -- plugintype:",e,"variableName:",t);const a=yield this.generatePluginFields(e);return this.pluginFields[e]=a,console.log(a),a[t]}})}generatePluginFields(e){return p(this,null,function*(){const t=yield this.fetchScript(e);return this.parseJavadocString(t)})}fetchScript(e){return p(this,null,function*(){const t=`http://localhost:3000/plugin/${e}/index.ts`;try{return yield(yield fetch(t)).text()}catch(a){console.error("Unexpected error occurred:",a);return}})}parseJavadocString(e){const t=e.match(/data:\s*{([\s\S]*?)};\s*/).join(),a={},i=new RegExp("\\/\\*\\*\\s*([\\s\\S]*?)\\s*\\*\\/\\s*(\\w+):\\s*{\\s*([\\s\\S]*?)\\s*},?","gs"),r=/\s*(\w+):\s*([^,\s]+)/g;let s;for(;(s=i.exec(t))!==null;){let[,o,l,c]=s;o=o.trim().replace(/\s+/g," ");const u={};let b;for(;(b=r.exec(c))!==null;){let[,A,L]=b;u[A]=L}a[l]=k({description:o},u)}return a}}class N{constructor(){this.generateDefaultVariables()}generateDefaultVariables(){this.variables={};const e={type:"PropertyValue",name:"trial_type",description:{default:"unknown",jsPsych:"The name of the plugin used to run the trial."},value:"string"};this.setVariable(e);const t={type:"PropertyValue",name:"trial_index",description:{default:"unknown",jsPsych:"The index of the current trial across the whole experiment."},value:"numeric"};this.setVariable(t);const a={type:"PropertyValue",name:"time_elapsed",description:{default:"unknown",jsPsych:"The number of milliseconds between the start of the experiment and when the trial ended."},value:"numeric"};this.setVariable(a)}getList(){var e=[];for(const t of Object.keys(this.variables)){const a=this.variables[t],i=a.description,r=Object.keys(i).length;if(r===0)console.error("Empty description");else if(r===1){const s=Object.keys(i)[0];a.description=i[s]}else if(r==2){if(delete i.default,Object.keys(i).length==1){const s=Object.keys(i)[0];a.description=i[s]}}else r>2&&delete i.default;e.push(a)}return e}setVariable(e){if(!e.name){console.warn("Name field is missing. Variable not added.",e);return}this.variables[e.name]=e;const t=Object.keys(e).filter(a=>!["type","name","description","value","identifier","minValue","maxValue","levels","levelsOrdered","na","naValue","alternateName","privacy"].includes(a));t.length>0&&console.warn(`Unexpected fields (${t.join(", ")}) detected and included in the variable object.`)}getVariable(e){return this.variables[e]||{}}containsVariable(e){return e in this.variables}getVariableNames(){var e=[];for(const t of Object.keys(this.variables))e.push(this.variables[t].name);return e}updateVariable(e,t,a){const i=this.getVariable(e);if(Object.keys(i).length===0){console.error(`Variable "${e}" does not exist.`);return}t==="levels"?this.updateLevels(i,a):t==="minValue"||t==="maxValue"?this.updateMinMax(i,a,t):t==="description"?this.updateDescription(i,a):t==="name"?this.updateName(i,a):i[t]=a}updateLevels(e,t){Array.isArray(e.levels)||(e.levels=[]),e.levels.includes(t)||e.levels.push(t)}updateMinMax(e,t,a){if(!("minValue"in e)||!("maxValue"in e)){e.maxValue=e.minValue=t;return}a==="minValue"&&e.minValue>t?e.minValue=t:a==="maxValue"&&e.maxValue<t&&(e.maxValue=t)}updateDescription(e,t){const a=Object.keys(t)[0],i=Object.values(t)[0];if(a==="undefined"||i==="undefined"){console.error("New value is passed in bad format",t);return}var r=!1;typeof e.description!="object"&&(e.description={}),Object.entries(e.description).forEach(([s,o])=>{o===i&&(s.includes(a)||(delete e.description[s],e.description[s+", "+a]=i),r=!0)}),r||Object.assign(e.description,t)}updateName(e,t){const a=e.name;e.name=t,delete this.variables[a],this.setVariable(e)}deleteVariable(e){e in this.variables?delete this.variables[e]:console.error(`Variable "${e}" does not exist.`)}}var h=(n,e,t)=>new Promise((a,i)=>{var r=l=>{try{o(t.next(l))}catch(c){i(c)}},s=l=>{try{o(t.throw(l))}catch(c){i(c)}},o=l=>l.done?a(l.value):Promise.resolve(l.value).then(r,s);o((t=t.apply(n,e)).next())});class S{constructor(){this.metadata={},this.setMetadataField("name","title"),this.setMetadataField("schemaVersion","Psych-DS 0.4.0"),this.setMetadataField("@context","https://schema.org"),this.setMetadataField("@type","Dataset"),this.setMetadataField("description","Dataset generated using JsPsych"),this.authors=new w,this.variables=new N,this.pluginCache=new F}setMetadataField(e,t){this.metadata[e]=t}getMetadataField(e){return this.metadata[e]}getMetadata(){const e=this.metadata;return e.author=this.authors.getList(),e.variableMeasured=this.variables.getList(),e}setAuthor(e){this.authors.setAuthor(e)}getAuthor(e){return this.authors.getAuthor(e)}setVariable(e){this.variables.setVariable(e)}getVariable(e){return this.variables.getVariable(e)}containsVariable(e){return this.variables.containsVariable(e)}updateVariable(e,t,a){this.variables.updateVariable(e,t,a)}deleteVariable(e){this.variables.deleteVariable(e)}getVariableNames(){return this.variables.getVariableNames()}displayMetadata(e){const t="jspsych-metadata-display",a=JSON.stringify(this.getMetadata(),null,2);e.innerHTML+=`<p id="jspsych-metadata-header">Metadata</p><pre id="${t}" class="jspsych-preformat"></pre>`,document.getElementById(t).textContent+=a}saveAsJsonFile(){const e=JSON.stringify(this.getMetadata(),null,2),t=new Blob([e],{type:"application/json"}),a=URL.createObjectURL(t),i=document.createElement("a");i.href=a,i.download="dataset_description.json",document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(a)}CSV2JSON(e){const t=e.split(`\r
`),a=[],i=t[0].split(",").map(r=>r.replace(/""/g,'"').slice(1,-1));for(let r=1;r<t.length;r++){if(!t[r])continue;const s={},o=t[r].split(",").map(l=>l.replace(/""/g,'"').slice(1,-1));i.forEach((l,c)=>{const u=o[c];if(u!==void 0&&u!=="")if(!isNaN(u))s[l]=parseFloat(u);else if(u.toLowerCase()==="null")s[l]=null;else try{s[l]=JSON.parse(u)}catch(b){s[l]=u}}),Object.keys(s).length>0&&a.push(s)}return a}generate(e){return h(this,arguments,function*(t,a={},i=!1){if(i?t=this.CSV2JSON(t):typeof t=="string"&&(t=JSON.parse(t)),typeof t!="object"){console.error("Unable to parse data object object, not in correct format");return}for(const r of t)yield this.generateObservation(r);for(const r in a)this.processMetadata(a,r)})}generateObservation(e){return h(this,null,function*(){const t=e.trial_type,a=new Set(["trial_type","trial_index","time_elapsed"]);for(const i in e){const r=e[i];r!==null&&(a.has(i)?this.updateFields(i,r,typeof r):yield this.generateMetadata(i,r,t))}})}generateMetadata(e,t,a){return h(this,null,function*(){const i=(yield this.getPluginInfo(a,e)).description,r=i?{[a]:i}:{[a]:"unknown"},s=typeof t;if(!this.containsVariable(e)){const o={type:"PropertyValue",name:e,description:{default:"unknown"},value:s};this.setVariable(o)}this.updateVariable(e,"description",r),this.updateFields(e,t,s)})}updateFields(e,t,a){if(a==="number"){this.updateVariable(e,"minValue",t),this.updateVariable(e,"maxValue",t);return}a!=="number"&&a!=="object"&&this.updateVariable(e,"levels",t)}processMetadata(e,t){const a=e[t];if(t==="variables"){if(typeof a!="object"||a===null){console.warn("Variable object is either null or incorrect type");return}for(let i in a){if(!this.containsVariable(i)){console.warn("Metadata does not contain variable:",i);continue}const r=a[i];if(typeof r!="object"||r===null){console.warn("Parameters of variable:",i,"is either null or incorrect type. The value",r,"is either null or not an object.");continue}for(const s in r){const o=r[s];this.updateVariable(i,s,o),s==="name"&&(i=o)}}}else if(t==="author"){if(typeof a!="object"||a===null){console.warn("Author object is not correct type");return}for(const i in a){const r=a[i];typeof r!="string"&&!("name"in r)&&(r.name=i),this.setAuthor(r)}}else this.setMetadataField(t,a)}getPluginInfo(e,t){return h(this,null,function*(){return this.pluginCache.getPluginInfo(e,t)})}}return S}();
//# sourceMappingURL=index.browser.min.js.map
