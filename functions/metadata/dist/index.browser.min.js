var jsPsychMetadata=function(){"use strict";var m=Object.defineProperty,u=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,b=Object.prototype.propertyIsEnumerable,f=(n,e,t)=>e in n?m(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,y=(n,e)=>{for(var t in e||(e={}))p.call(e,t)&&f(n,t,e[t]);if(u)for(var t of u(e))b.call(e,t)&&f(n,t,e[t]);return n},v=(n,e)=>{var t={};for(var a in n)p.call(n,a)&&e.indexOf(a)<0&&(t[a]=n[a]);if(n!=null&&u)for(var a of u(n))e.indexOf(a)<0&&b.call(n,a)&&(t[a]=n[a]);return t};class g{constructor(){this.authors={}}getList(){const e=[];for(const t of Object.keys(this.authors))e.push(this.authors[t]);return e}setAuthor(e){if(typeof e=="string"){this.authors[e]=e;return}if(!e.name){console.warn("Name field is missing. Author not added.");return}const t=e,{name:a}=t,s=v(t,["name"]);if(Object.keys(s).length==0)this.authors[a]=a;else{const i=y({name:a},s);this.authors[a]=i;const r=Object.keys(e).filter(o=>!["type","name","givenName","familyName","identifier"].includes(o));r.length>0&&console.warn(`Unexpected fields (${r.join(", ")}) detected and included in the author object.`)}}getAuthor(e){return e in this.authors?this.authors[e]:(console.warn("Author (",e,") not found."),{})}}class V{constructor(){this.generateDefaultVariables()}generateDefaultVariables(){this.variables={};const e={type:"PropertyValue",name:"trial_type",description:{default:"unknown",jsPsych:"The name of the plugin used to run the trial."},value:"string"};this.setVariable(e);const t={type:"PropertyValue",name:"trial_index",description:{default:"unknown",jsPsych:"The index of the current trial across the whole experiment."},value:"numeric"};this.setVariable(t);const a={type:"PropertyValue",name:"time_elapsed",description:{default:"unknown",jsPsych:"The number of milliseconds between the start of the experiment and when the trial ended."},value:"numeric"};this.setVariable(a)}getList(){var e=[];for(const t of Object.keys(this.variables)){const a=this.variables[t],s=a.description,i=Object.keys(s).length;if(i===0)console.error("Empty description");else if(i===1){const r=Object.keys(s)[0];a.description=s[r]}else if(i==2){if(delete s.default,Object.keys(s).length==1){const r=Object.keys(s)[0];a.description=s[r]}}else i>2&&delete s.default;e.push(a)}return e}setVariable(e){if(!e.name){console.warn("Name field is missing. Variable not added.",e);return}this.variables[e.name]=e;const t=Object.keys(e).filter(a=>!["type","name","description","value","identifier","minValue","maxValue","levels","levelsOrdered","na","naValue","alternateName","privacy"].includes(a));t.length>0&&console.warn(`Unexpected fields (${t.join(", ")}) detected and included in the variable object.`)}getVariable(e){return this.variables[e]||{}}containsVariable(e){return e in this.variables}getVariableNames(){var e=[];for(const t of Object.keys(this.variables))e.push(this.variables[t].name);return e}updateVariable(e,t,a){const s=this.getVariable(e);if(Object.keys(s).length===0){console.error(`Variable "${e}" does not exist.`);return}t==="levels"?this.updateLevels(s,a):t==="minValue"||t==="maxValue"?this.updateMinMax(s,a,t):t==="description"?this.updateDescription(s,a):t==="name"?this.updateName(s,a):s[t]=a}updateLevels(e,t){Array.isArray(e.levels)||(e.levels=[]),e.levels.includes(t)||e.levels.push(t)}updateMinMax(e,t,a){if(!("minValue"in e)||!("maxValue"in e)){e.maxValue=e.minValue=t;return}a==="minValue"&&e.minValue>t?e.minValue=t:a==="maxValue"&&e.maxValue<t&&(e.maxValue=t)}updateDescription(e,t){const a=Object.keys(t)[0],s=Object.values(t)[0];if(a==="undefined"||s==="undefined"){console.error("New value is passed in bad format",t);return}var i=!1;typeof e.description!="object"&&(e.description={}),Object.entries(e.description).forEach(([r,o])=>{o===s&&(r.includes(a)||(delete e.description[r],e.description[r+", "+a]=s),i=!0)}),i||Object.assign(e.description,t)}updateName(e,t){const a=e.name;e.name=t,delete this.variables[a],this.setVariable(e)}deleteVariable(e){e in this.variables?delete this.variables[e]:console.error(`Variable "${e}" does not exist.`)}}var d=(n,e,t)=>new Promise((a,s)=>{var i=l=>{try{o(t.next(l))}catch(h){s(h)}},r=l=>{try{o(t.throw(l))}catch(h){s(h)}},o=l=>l.done?a(l.value):Promise.resolve(l.value).then(i,r);o((t=t.apply(n,e)).next())});class j{constructor(){this.generateDefaultMetadata()}generateDefaultMetadata(){this.metadata={},this.setMetadataField("name","title"),this.setMetadataField("schemaVersion","Psych-DS 0.4.0"),this.setMetadataField("@context","https://schema.org"),this.setMetadataField("@type","Dataset"),this.setMetadataField("description","Dataset generated using JsPsych"),this.authors=new g,this.variables=new V,this.cache={},this.requests_cache={}}setMetadataField(e,t){this.metadata[e]=t}getMetadataField(e){return this.metadata[e]}getMetadata(){const e=this.metadata;return e.author=this.authors.getList(),e.variableMeasured=this.variables.getList(),e}setAuthor(e){this.authors.setAuthor(e)}getAuthor(e){return this.authors.getAuthor(e)}setVariable(e){this.variables.setVariable(e)}getVariable(e){return this.variables.getVariable(e)}containsVariable(e){return this.variables.containsVariable(e)}updateVariable(e,t,a){this.variables.updateVariable(e,t,a)}deleteVariable(e){this.variables.deleteVariable(e)}getVariableNames(){return this.variables.getVariableNames()}displayMetadata(e){const t="jspsych-metadata-display",a=JSON.stringify(this.getMetadata(),null,2);e.innerHTML+=`<p id="jspsych-metadata-header">Metadata</p><pre id="${t}" class="jspsych-preformat"></pre>`,document.getElementById(t).textContent+=a}saveAsJsonFile(){const e=JSON.stringify(this.getMetadata(),null,2),t=new Blob([e],{type:"application/json"}),a=URL.createObjectURL(t),s=document.createElement("a");s.href=a,s.download="dataset_description.json",document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(a)}CSV2JSON(e){const t=e.split(`\r
`),a=[],s=t[0].split(",").map(i=>i.replace(/""/g,'"').slice(1,-1));for(let i=1;i<t.length;i++){if(!t[i])continue;const r={},o=t[i].split(",").map(l=>l.replace(/""/g,'"').slice(1,-1));s.forEach((l,h)=>{const c=o[h];if(c!==void 0&&c!=="")if(!isNaN(c))r[l]=parseFloat(c);else if(c.toLowerCase()==="null")r[l]=null;else try{r[l]=JSON.parse(c)}catch(O){r[l]=c}}),Object.keys(r).length>0&&a.push(r)}return a}generate(e){return d(this,arguments,function*(t,a={},s=!1){if(s?t=this.CSV2JSON(t):typeof t=="string"&&(t=JSON.parse(t)),typeof t!="object"){console.error("Unable to parse data object object, not in correct format");return}for(const i of t)yield this.generateObservation(i);for(const i in a)this.processMetadata(a,i)})}generateObservation(e){return d(this,null,function*(){const t=e.trial_type,a=new Set(["trial_type","trial_index","time_elapsed"]);for(const s in e){const i=e[s];i!==null&&(a.has(s)?this.updateFields(s,i,typeof i):yield this.generateMetadata(s,i,t))}})}generateMetadata(e,t,a){return d(this,null,function*(){const s=yield this.getPluginInfo(a,e),i=s?{[a]:s}:{[a]:"unknown"},r=typeof t;if(!this.containsVariable(e)){const o={type:"PropertyValue",name:e,description:{default:"unknown"},value:r};this.setVariable(o)}this.updateVariable(e,"description",i),this.updateFields(e,t,r)})}updateFields(e,t,a){if(a==="number"){this.updateVariable(e,"minValue",t),this.updateVariable(e,"maxValue",t);return}a!=="number"&&a!=="object"&&this.updateVariable(e,"levels",t)}processMetadata(e,t){const a=e[t];if(t==="variables"){if(typeof a!="object"||a===null){console.warn("Variable object is either null or incorrect type");return}for(let s in a){if(!this.containsVariable(s)){console.warn("Metadata does not contain variable:",s);continue}const i=a[s];if(typeof i!="object"||i===null){console.warn("Parameters of variable:",s,"is either null or incorrect type. The value",i,"is either null or not an object.");continue}for(const r in i){const o=i[r];this.updateVariable(s,r,o),r==="name"&&(s=o)}}}else if(t==="author"){if(typeof a!="object"||a===null){console.warn("Author object is not correct type");return}for(const s in a){const i=a[s];typeof i!="string"&&!("name"in i)&&(i.name=s),this.setAuthor(i)}}else this.setMetadataField(t,a)}getPluginInfo(e,t){return d(this,null,function*(){if(!this.cache[e])this.cache[e]={};else if(t in this.cache[e])return this.cache[e][t];const a=`https://unpkg.com/@jspsych/plugin-${e}/src/index.ts`;try{let s="unknown";if(e in this.requests_cache){const i=this.requests_cache[e];s=this.getJsdocsDescription(i,t),this.cache[e][t]=s}else{const i=yield(yield fetch(a)).text();this.requests_cache[e]=i,console.log(i),s=this.getJsdocsDescription(i,t),this.cache[e]||(this.cache[e]={}),this.cache[e][t]=s}return s}catch(s){return console.error(`Failed to fetch info from ${a}:`,s),this.cache[e]||(this.cache[e]={}),this.cache[e][t]=null,"failed with error"}})}getJsdocsDescription(e,t){const a=e.match(/parameters:\s*{([\s\S]*?)};\s*/).join(),s=new RegExp(`((.|
)*)(?=${t}:)`),i=a.match(s)[0];return i.slice(i.lastIndexOf("/**")).match(new RegExp("(?<=\\*\\*)([\\s\\S]*?)(?=\\*\\/)"))[1].replace(/(\r\n|\n|\r)/gm,"").replace(/\*/gm,"").trim()}}return j}();
//# sourceMappingURL=index.browser.min.js.map
